{"meta":{"title":"细数惭愧的博客","subtitle":"Python笔记","description":"","author":null,"url":"https://github.com/xuejing1348748844/xuejing1348748844.github.io.git","root":"/"},"pages":[{"title":"tags","date":"2020-07-07T11:57:12.000Z","updated":"2020-07-07T11:57:12.318Z","comments":true,"path":"tags/index.html","permalink":"https://github.com/xuejing1348748844/xuejing1348748844.github.io.git/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"Python作业","slug":"Python作业","date":"2020-07-08T13:56:45.000Z","updated":"2020-07-10T14:31:03.787Z","comments":true,"path":"2020/07/08/Python作业/","link":"","permalink":"https://github.com/xuejing1348748844/xuejing1348748844.github.io.git/2020/07/08/Python%E4%BD%9C%E4%B8%9A/","excerpt":"","text":"////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////【打激素的数组 1】0. 列表都可以存放一些什么东西？ 答：大部分类型都可以放。 向列表增加元素有哪些方法？答：append(),extend([列表])。 append() 方法和 extend() 方法都是向列表的末尾增加元素，请问他们有什么区别？答：append()：只能添加一个，extend():只能添加另一个数组，等于合并两个数组 member.append([‘竹林小溪’, ‘Crazy迷恋’]) 和 member.extend([‘竹林小溪’, ‘Crazy迷恋’]) 实现的效果一样吗？答：append():会把名称所有的标点符号一起添加进去 extend():只添加括号内的内容，不会吧所有的标点符号都加进去 有列表 name = [‘F’, ‘i’, ‘h’, ‘C’]，如果小甲鱼想要在元素 ‘i’ 和 ‘h’ 之间插入元素 ‘s’，应该使用什么方法来插入答：插入元素函数：insert(位置，内容)。 自己动手试试看，并分析在这种情况下，向列表添加数据应当采用哪种方法比较好？ 假设给定以下列表： member = [‘小甲鱼’, ‘黑夜’, ‘迷途’, ‘怡静’, ‘秋舞斜阳’] 要求将列表修改为： member = [‘小甲鱼’, 88, ‘黑夜’, 90, ‘迷途’, 85, ‘怡静’, 90, ‘秋舞斜阳’, 88] 方法一：使用 insert() 和 append() 方法修改列表。 方法二：重新创建一个同名字的列表覆盖。 答： member=[‘小甲鱼’,’黑夜’,’迷途’,’怡静’,’秋舞斜阳’] member.insert(1, 88) member.insert(3, 90) member.insert(5, 85) member.insert(7, 90) member.append(88) 利用 for 循环打印上边 member 列表中的每个内容member = [‘小甲鱼’, 88, ‘黑夜’, 90, ‘迷途’, 85, ‘怡静’, 90, ‘秋舞斜阳’, 88]答： for i in member: print(i) 上一题打印的样式不是很好，能不能修改一下代码答： member = [&apos;小甲鱼&apos;, 88, &apos;黑夜&apos;, 90, &apos;迷途&apos;, 85, &apos;怡静&apos;, 90, &apos;秋舞斜阳&apos;, 88] l=len(member) count=0 while count&lt;l: print(member[count],member[count+1]) count+=2 member = [&apos;小甲鱼&apos;, 88, &apos;黑夜&apos;, 90, &apos;迷途&apos;, 85, &apos;怡静&apos;, 90, &apos;秋舞斜阳&apos;, 88] for each in range(len(member)): if each%2==0: print(member[each],member[each+1]) 判断i是否是偶数 如果i是偶数，i%2==0 返回du1（true），执行zhiif后面语句，dao 如果i不是偶数，i%2==0返回0（false），跳过if后面语句，执行else if或者else语句。////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////【打了激素的数组2】0. 下边的列表分片操作会打印什么内容？ list1 = [1, 3, 2, 9, 7, 8] list1[2:5] 答：2，9，7 请问 list1[0] 和 list1[0:1] 一样吗？答:list[0]输出是一个数值，list[0:1]是个数组 如果你每次想从列表的末尾取出一个元素，并将这个元素插入到列表的最前边，你会怎么做？答：s=list.pop() list.insert(0,s); 有些鱼油比较调皮，他说我想试试 list1[-3:-1] 会不会报错，怎么知道一试居然显示 [9, 7]，这是怎么回事呢？答：数组0号位的-3就是倒数第三位…………. 在进行分片的时候，我们知道分片的开始和结束位置需要进行指定，但其实还有另外一个隐藏的设置：步长。在普通的分片操作中，步长默认设置为1，表示逐个遍历元素。其实我们可以人为调整步长以达到不可告人的秘密。list1[0:6:2][1, 2, 7]答：0到6，0到2结果为[1,2,7]也可以写作list[::2] 课堂上小甲鱼说可以利用分片完成列表的拷贝 list2 = list1[:]，那事实上可不可以直接写成 list2 = list1 更加简洁呢？答：不可以，因为list[:]是拷贝整篇数组的意思，list直接等于再修改的话会改变两个数组的值 ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////【打了激素的数组3】0. 注意，这道题跟上节课的那道题有点儿不同，回答完请上机实验或参考答案。 old = [1, 2, 3, 4, 5]new = oldold = [6]print(new)如果不上机操作，你觉得会打印什么内容？答：打印[1,2,3,4,5]，因为old重新指向了一个新数组，而new指向了继承原old的数组 请问如何将下边这个列表的’小甲鱼’修改为’小鱿鱼’？ list1 = [1, [1, 2, [‘小甲鱼’]], 3, 5, 8, 13, 18]答：list1[1][2][0]=’小鱿鱼’ 要对一个列表进行顺序排序，请问使用什么方法？答：sort()方法 要对一个列表进行逆序排序，请问使用什么方法？答：sort(reverse=True)方法 列表还有两个内置方法没给大家介绍，不过聪明的你应该可以自己摸索使用的门道吧：copy() 和 clear()答：s=new.copy()…….使用方法类似与s=new[:]都是直接复制整个数组而不是指向它 你有听说过列表推导式或列表解析吗？ 没听过？！没关系，我们现场来学习一下吧，看表达式： [ i*i for i in range(10) ] 你觉得会打印什么内容？ [i*i for i in range(10)][0, 1, 4, 9, 16, 25, 36, 49, 64, 81] 居然分别打印了0到9各个数的平方，然后还放在列表里边了有木有？！列表推导式（List comprehensions）也叫列表解析，灵感取自函数式编程语言 Haskell。Ta 是一个非常有用和灵活的工具，可以用来动态的创建列表，语法如：[有关A的表达式 for A in B]例如 list1 = [x**2 for x in range(10)]list1[0, 1, 4, 9, 16, 25, 36, 49, 64, 81] 相当于 list1 = []for x in range(10): list1.append(x**2) 问题：请先在 IDLE 中获得下边列表的结果，并按照上方例子把列表推导式还原出来。 list1 = [(x, y) for x in range(10) for y in range(10) if x%2==0 if y%2!=0]答：lits1=[] for x in range(10): for y in range(10): if x%2==0: if y%2 != 0 ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////","categories":[],"tags":[]}],"categories":[],"tags":[]}